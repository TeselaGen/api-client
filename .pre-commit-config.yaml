---
# Install pre-commit
#   python3 -m pip install --upgrade --no-cache-dir --no-warn-script-location --trusted-host pypi.python.org pre-commit

# Auto-update the version of the hooks
#   pre-commit autoupdate

# Install the pre-commit hooks
#   pre-commit install
#   pre-commit install-hooks

# Run the hooks on all files with
#   pre-commit run --all-files

# Hard cleanup
#   pre-commit uninstall
#   pre-commit clean
#   pre-commit gc
#   pre-commit autoupdate
#   pre-commit install
#   pre-commit install-hooks
#   pre-commit run --all-files
#   pre-commit gc

# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

minimum_pre_commit_version: "2.15.0"

default_language_version:
  # force all unspecified python hooks to run python3
  python: python3
  # python: python3.9

# whether to fail on first error or continue
fail_fast: false

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.0.1
    hooks:
      - id: check-ast
        name: "[check]: files parse as valid python"

      - id: check-builtin-literals
        name: "[check]: builtin type constructor use (Python)"

      - id: trailing-whitespace
        name: "  [fix]: trim trailing whitespace"
        args:
          # preserve Markdown hard line breaks
          - --markdown-linebreak-ext=md

      - id: check-docstring-first
        name: "[check]: docstring must be first in a module (Python)"

      - id: check-added-large-files
        name: "[check]: added large files"

      - id: check-json
        # does not support comments (JSONC)
        # does not support trailing commas
        name: "[check]: files are valid JSON"
        # NOTE: mark regex as verbose ( https://github.com/psf/black/issues/395#issuecomment-499630129 )
        exclude: |
          (?x)(
              cSpell\.json|
              .devcontainer/|
              .vscode/
          )

      - id: check-toml
        name: "[check]: files are valid TOML"

      - id: check-yaml
        name: "[check]: files are valid YAML"

      - id: debug-statements
        name: "[check]: debug statements (Python)"

      - id: check-merge-conflict
        name: "[check]: merge conflict markers"

      - id: double-quote-string-fixer
        name: "  [fix]: double-quoted strings to single-quoted strings (Python)"
        stages: [manual]

      - id: end-of-file-fixer
        name: "  [fix]: fix missing newline at end of file"
        exclude: '.*\.(txt|csv)'

      - id: fix-encoding-pragma
        name: "  [fix]: encoding pragma (Python)"
        args:
          - --remove

      - id: mixed-line-ending
        name: "  [fix]: mixed line endings"
        args:
          - --fix=lf

      - id: name-tests-test
        name: "[check]: test files should be named test*.py"
        args:
          # use '--django' to match 'test*.py' instead of '*_test.py'
          - --django

      - id: detect-private-key
        name: "[check]: detect private key"

      - id: fix-byte-order-marker
        name: "  [fix]: remove UTF-8 byte order marker"

      - id: no-commit-to-branch
        name: "[check]: no commit to branch"
        args:
          - --branch=master
          - --branch=main

      - id: forbid-new-submodules
        name: "[check]: forbid new submodules"

      - id: check-case-conflict
        name: "[check]: filename case conflicts"

  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.9.0
    hooks:
      - id: python-check-blanket-noqa
        name: "[check]: blanket noqa"

      - id: python-check-blanket-type-ignore
        name: "[check]: blanket type ignore"

      - id: python-check-mock-methods
        name: "[check]: not-real mock methods"

      - id: python-no-eval
        name: "[check]: no eval()"

      - id: python-no-log-warn
        name: "[check]: no logger.warn, use logger.warning"

      - id: python-use-type-annotations
        name: "[check]: use type annotations, not comments"

      - id: text-unicode-replacement-char
        name: "[check]: no unicode replacement chars"

  - repo: https://github.com/myint/autoflake
    rev: v1.4
    hooks:
      - id: autoflake
        alias: remove-unused-imports
        name: "  [fix]: remove unused imports (Python) [autoflake]"
        args:
          - --in-place
          - --remove-all-unused-imports
          - --ignore-init-module-imports
        #   - --expand-star-imports
        #   - --remove-duplicate-keys
        #   - --remove-unused-variables

  - repo: https://github.com/pre-commit/mirrors-autopep8
    rev: v1.5.7
    hooks:
      - id: autopep8
        alias: fix-pep8
        name: "  [fix]: PEP 8 (Python) [autopep8]"
        args:
          # - "--select=E26,E265,E266,E731"
          # - --jobs=0
          - --jobs=8
          - --aggressive
          - --aggressive
          - --aggressive
          - --experimental
          - --max-line-length=119
          - --in-place

  - repo: https://github.com/myint/docformatter
    rev: v1.4
    hooks:
      - id: docformatter
        alias: fix-docstrings
        name: "  [fix]: docstring PEP 257 (Python) [docformatter]"
        args:
          - --wrap-summaries=119
          - --wrap-descriptions=119
          - --in-place

  - repo: https://github.com/PyCQA/isort
    rev: 5.10.1
    hooks:
      - id: isort
        alias: fix-imports-order
        name: "  [fix]: imports order (Python) [isort]"
        args:
          - --jobs=8
          - --filter-files

  - repo: https://github.com/pre-commit/mirrors-yapf
    rev: v0.31.0
    hooks:
      - id: yapf
        name: "  [fix]: format code (Python) [yapf]"

  - repo: https://github.com/asottile/pyupgrade
    rev: v2.29.1
    hooks:
      - id: pyupgrade
        name: "  [fix]: upgrade syntax (Python) [pyupgrade]"
        args:
          - --py36-plus
          - --py37-plus
          - --keep-runtime-typing

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.1
    hooks:
      - id: bandit
        name: "[check]: security (Python) [bandit]"
        args:
          # exit with 0, even with results found
          # - --exit-zero
          # only show output in the case of an error
          - --silent
          # report only issues of a given confidence level or higher (-i for LOW, -ii for MEDIUM, -iii for HIGH)
          # - -ii
          # report only issues of a given severity level or higher  (-l for LOW, -ll for MEDIUM, -lll for HIGH)
          - -ll
          # optional config file to use for selecting plugins and overriding defaults
          - --configfile=bandit.yml
          # path to a .bandit file that supplies command line arguments
          - --ini=.bandit

  - repo: https://github.com/asottile/yesqa
    rev: v1.3.0
    hooks:
      - id: yesqa
        alias: remove-unncessary-noqa-comments
        name: "[fix]: remove unnecessary noqa comments [yesqa]"
        additional_dependencies: &flake8_deps
          - bandit>=1.7.1
          - cohesion>=1.0.0
          - flake8-bandit>=2.1.2
          - flake8-broken-line>=0.4.0
          - flake8-bugbear>=21.11.29
          - flake8-commas>=2.1.0
          - flake8-comprehensions>=3.7.0
          - flake8-copyright>=0.2.2
          - flake8-debugger>=4.0.0
          - flake8-docstrings>=1.6.0
          - flake8-eradicate>=1.2.0
          - flake8-executable>=2.1.1
          - flake8-implicit-str-concat>=0.2.0
          - flake8-logging-format>=0.6.0
          - flake8-no-pep420>=2.0.0
          - flake8-polyfill>=1.0.2
          - flake8-print>=4.0.0
          - flake8-pytest-style>=1.5.1
          - flake8-quotes>=3.3.1
          - flake8-simplify>=0.14.2
          - flake8-type-checking>=1.1.1
          - flake8-typing-imports>=1.12.0
          - flake8-use-pathlib>=0.2.1
          - mccabe>=0.6.1
          - pep8-naming>=0.12.1
          - pep8>=1.7.1
          - pycodestyle>=2.8.0
          - pydocstyle>=6.1.1
          - radon>=5.1.0
          - tryceratops>=1.0.0

  # - repo: https://github.com/pycqa/flake8
  #   rev: 4.0.1
  #   hooks:
  #     - id: flake8
  #       alias: check-flake8
  #       name: "[check]: PEP 8 (Python) [flake8]"
  #       additional_dependencies: *flake8_deps

  - repo: https://github.com/adrienverge/yamllint
    rev: v1.26.3
    hooks:
      - id: yamllint
        alias: check-yaml-style
        name: "[check]: check yaml style issues [yamllint]"
        args:
          - --strict
          - --format=parsable

  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.2.2
    hooks:
      - id: nbqa-check-ast
        name: "[check]: cells parse as valid python (Notebooks) [nbqa-check-ast]"

      - id: nbqa-isort
        name: "  [fix]: sort imports (Notebooks) [nbqa-isort]"
        args:
          - --jobs=8

      - id: nbqa-pyupgrade
        name: "  [fix]: upgrade syntax (Notebooks) [nbqa-pyupgrade]"
        args:
          - --py37-plus
          - --py36-plus

      - id: nbqa-autopep8
        name: "  [fix]: PEP 8 (Notebooks) [nbqa-autopep8]"
        args:
          # - --select=E26,E265,E266,E731
          # - --jobs=0
          - --jobs=8
          - --aggressive
          - --aggressive
          - --aggressive
          - --experimental
          - --max-line-length=119
          - --in-place

      - id: nbqa-yapf
        name: "  [fix]: format code (Notebooks) [nbqa-yapf]"

  - repo: meta
    hooks:
      - id: check-hooks-apply
        name: "[check]: check that all hooks are applied [check-hooks-apply]"
      - id: check-useless-excludes
        name: "[check]: check that no useless excludes are used [check-useless-excludes]"
